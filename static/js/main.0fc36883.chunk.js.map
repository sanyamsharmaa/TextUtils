{"version":3,"sources":["FuncCmpnt.js","Form.js","NavBarCpnt.js","ChatBot.js","App.js","reportWebVitals.js","index.js"],"names":["Cmpnnt","props","React","createElement","Fragment","className","style","backgroundColor","clr","color","Form","prop","console","log","fclr","text","txtcvtr","useState","title","class","id","onChange","target","value","placeholder","rows","type","onClick","Cnvrtxt","utxt","toUpperCase","Lwrcase","ltxt","toLowerCase","CpyClpb","navigator","clipboard","writeText","split","length","toFixed","position","left","NavBar","ttl","lnk","label","func","bclr","Link","to","role","for","Chatbot","userInput","setUserInput","chatHistory","setChatHistory","map","message","key","concat","user","event","handleSubmit","newMessage","setTimeout","chatbotResponse","App","them","themstate","labl","styl","Router","Chngtheme","width","height","Routes","Route","exact","path","element","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.0fc36883.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n// import React, { Component } from 'react';\r\n\r\nfunction Cmpnnt(props) {   //Shortcut- rfc\r\n    return (\r\n        <>\r\n            <div className=\"box\" style={{backgroundColor:props.clr}}>\r\n                <center><h5 style={{color:'grey'}}>Google ADs</h5></center>\r\n            \r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Cmpnnt;\r\n\r\n\r\n\r\n","import React,{useState} from 'react'\r\n// import { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Cmpnnt from './FuncCmpnt';\r\n\r\n\r\nexport default function Form(prop) {\r\n    console.log(prop.fclr)\r\n    let Cnvrtxt=()=>{\r\n        let utxt=text.toUpperCase()\r\n        txtcvtr(utxt)\r\n    }\r\n    let ChngHandler=(text)=>{\r\n        txtcvtr(text.target.value)\r\n    }\r\n    let CpyClpb=()=>{\r\n     navigator.clipboard.writeText(text);\r\n    //  toast.success('Text copied on clipboard!',   {\r\n    //     position: \"bottom-center\",\r\n    //     autoClose: 1000,\r\n    //     hideProgressBar: false,\r\n    //     closeOnClick: false,\r\n    //     pauseOnHover: true,\r\n    //     draggable: true,\r\n    //     progress: undefined,\r\n    //     theme: \"dark\",\r\n    //     });\r\n    }\r\n    let Lwrcase=()=>{\r\n        let ltxt=text.toLowerCase();\r\n        txtcvtr(ltxt);\r\n    }\r\n    // let notify=()=>toast('Text copied!')\r\n    const [text,txtcvtr]=useState('')\r\n    return (\r\n        <>\r\n        <Cmpnnt clr='rgb(79, 211, 255,0)' />\r\n            <div className=\"frm\" >\r\n                <center ><h1 style={{color:prop.fclr}}>{prop.title}</h1></center>\r\n\r\n                <div class=\"mb-3 \">\r\n                    {console.log(text)}\r\n                    <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\" onChange={ChngHandler} value={text}  placeholder={text===''?'Enter text here to convert':''} rows=\"5\"></textarea>\r\n                    <center><input class=\"btn btn-primary mt-3  \" type=\"submit\" onClick={Cnvrtxt} value=\"UpperCase\"></input>\r\n                    <input class=\"btn btn-primary mt-3  \" type=\"submit\" onClick={Lwrcase} value=\"LowerCase\"></input>\r\n                    <input class=\"btn btn-primary mt-3  \" type=\"submit\" onClick={CpyClpb} value=\"Copy text\"></input>\r\n                    {/* <ToastContainer /> */}\r\n                    </center> \r\n                    \r\n                </div>\r\n                <div className=\"sumry\" style={{color:prop.fclr}} >\r\n                    Text Summary-\r\n                </div>\r\n                    <span style={{color:prop.fclr}}>Total Words-{text.split(\" \").length}</span>\r\n                    <div style={{color:'yellow'}}>{(0.005*text.split(\" \").length).toFixed(2)} Minutes read</div>\r\n\r\n            </div>\r\n            <Cmpnnt clr='rgb(236, 236, 54,0)' style={{ position: 'relative', left: '0%' }} />\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nexport default function NavBar(prop) { // for multiple agru use- {}  and for object-put prop object  directly eg:(propO)\r\nconst {ttl,lnk,label,func}=prop\r\n  return (\r\n    <>\r\n      <nav className=\"navbar navbar-expand-lg bg-body-primary py-0\">\r\n        <div className=\"container-fluid\" style={{backgroundColor:prop.bclr}}>\r\n          <div className=\"navbar-brand\"  >\r\n            <Link to=\"/\">{ttl}</Link>\r\n            </div> {/* // propO.title */}\r\n          {/* <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\">aaaa</span>\r\n          </button> */}\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n            <div className=\"navbar-nav\">\r\n              <ul>\r\n              <li><Link to=\"/\">{lnk}</Link> </li>\r\n              <li ><Link to=\"/ChatBot\">Chatbot</Link> </li>\r\n              {/* <a className=\"nav-link \" aria-current=\"page\" href=\"/\">{lnk}</a>\r\n               propO.link2\r\n              <a className=\"nav-link\" href=\"ChatBot.js\">ChatBot</a> */}\r\n              </ul>\r\n            </div>\r\n            <div className=\"form-check form-switch\">\r\n              <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" onClick={func} id=\"flexSwitchCheckDefault\" />\r\n              <label className=\"form-check-label\" for=\"flexSwitchCheckDefault\">{label}</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\n// import './Chatbot.css';\r\n\r\nconst Chatbot = () => {\r\n  const [userInput, setUserInput] = useState('');\r\n  const [chatHistory, setChatHistory] = useState([]);\r\n\r\n  const handleSubmit = () => {\r\n    if (userInput === '') return;\r\n\r\n    const newMessage = {\r\n      user: true,\r\n      message: userInput,\r\n    };\r\n\r\n    setChatHistory([...chatHistory, newMessage]);\r\n    setUserInput('');\r\n\r\n    // Simulate a delayed response from the chatbot\r\n    setTimeout(() => {\r\n      const chatbotResponse = {\r\n        user: false,\r\n        message: 'Chatbot response: ' + userInput,\r\n      };\r\n\r\n      setChatHistory([...chatHistory, chatbotResponse]);\r\n    }, 1000);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setUserInput(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className=\"chat-history\">\r\n        {chatHistory.map((message) => (\r\n          <div key={message.message} className={`chat-message ${message.user ? 'user-message' : 'chatbot-message'}`}>\r\n            {message.message}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"chatbot-input\">\r\n        <input type=\"text\" value={userInput} onChange={handleChange} placeholder=\"Enter your message\" />\r\n        <button onClick={handleSubmit}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n","// import logo from './logo.svg';\nimport './App1.css';\nimport Form from './Form';\n// import Cmpnnt from './FuncCmpnt';\nimport NavBar from './NavBarCpnt';\nimport React, { useState } from 'react';\nimport Chatbot from './ChatBot';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\n// import ChatBot from './ChatBot'\n// import Cmpnnt2 from './ClassCmpnt'\n// import React, {Component} from 'react';\n\nfunction App() {\n\n  let Chngtheme = () => {\n\n    if (them.labl === 'Light mode') {\n      let s = 'Dark mode'\n      // themstate({them, labl:s})\n\n      themstate({\n        them, labl: s, styl: {\n          backgroundColor: 'rgb(201, 197, 255)',\n          width: '100%',\n          height: '93.2vh',\n          color: 'black'\n        }\n      })\n    }\n    else {\n      let s = 'Light mode'\n      // themstate({them, labl:s}) (creating error)\n      themstate({\n        them, labl: s, styl: {\n          backgroundColor: 'rgb(4, 3, 61)',\n          width: '100%',\n          height: '93.2vh',\n          color: 'black'\n        }\n      })\n    }\n  }\n  const [them, themstate] = useState({ labl: 'Light mode', styl: { backgroundColor: 'rgb(4, 3, 61)' } });\n  return (\n    // <> </> parent wrapper tag called Fragment, component  can’t return multiple JSX tags\n    <>\n      {/* <div classNameName=\"App\">\n      <header classNameName=\"App-header\">\n        <img src={logo} classNameName=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          >\n          Get started React with Sanyam!\n        </a>\n    <div className=\"akr\"><p>Start</p></div>\n      </header>\n    </div> */}\n      <Router>\n              <NavBar ttl={'TextUtilS'} lnk={'Converter'} label={them.labl} func={Chngtheme} bclr={them.labl === 'Dark mode' ? 'rgb(174, 169, 250)' : 'rgb(5, 4, 72)'} />  {/*style={{backgroundColor:'white'}} */}\n        <div className=\"bdy\" style={them.styl}>  {/* {backgroundColor:'rgb(4, 3, 61)',width:'100%',height:'93.2vh'} */}\n          <div className=\"cntr\">\n            <Routes>\n              \n              <Route exact path=\"/\"  element={<Form title='Case Converter' fclr={them.labl === 'Dark mode' ? 'black' : 'white'} />}/>\n                {/* <Cmpnnt clr='rgb(79, 211, 255,0)' />\n                <Form title='Case Converter' fclr={them.labl === 'Dark mode' ? 'black' : 'white'} />\n                <Cmpnnt clr='rgb(236, 236, 54,0)' style={{ position: 'relative', left: '0%' }} /> Reusability\n              </Route> */}\n\n                \n              <Route exact path=\"/ChatBot\" element={<Chatbot />}/>\n                {/* <Chatbot />\n              </Route> */}\n              \n            </Routes>\n\n          </div>\n        </div>\n      </Router>\n    </>\n  );\n}\n\n// class Cmpnnt2  extends Component{\n//   render(){\n//     return(\n//       <h5>I'm component 2</h5>\n//     )\n//   }\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);  \n \n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}